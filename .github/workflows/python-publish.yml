name: Publish Python Package

on:
  push:
    branches: [master, stage]
  pull_request:
    branches: [master, stage]

permissions:
  id-token: write
  contents: read

jobs:
  test:
    runs-on: self-hosted
    strategy:
      matrix:
        python-version: [ "3.12", "3.13", "3.14" ]
    steps:
      - uses: actions/checkout@v4

      - name: Run tests inside isolated Docker container
        run: |
          docker run --rm \
          -v "$PWD":/src:ro \
          -w /tmp/workdir \
          -e UV_PROJECT_ENVIRONMENT=/tmp/.venv \
          python:${{ matrix.python-version }} \
          bash -c "
            set -e
            cp -r /src . && cd $(basename /src)
            pip install --upgrade pip uv pytest
            uv sync --all-extras --dev
          "

  publish:
    runs-on: self-hosted
    needs: test
    environment: pypi
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      - name: Build the package
        run: uv build
      - name: Publish to TestPyPI (stage branch)
        if: github.ref == 'refs/heads/stage'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
      - name: Publish to PyPI (master branch)
        if: github.ref == 'refs/heads/master'
        uses: pypa/gh-action-pypi-publish@release/v1
