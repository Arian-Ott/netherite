name: Publish Python Package

on:
  push:
    branches:
      - master
      - stage
  pull_request:
    branches:
      - master
      - stage

permissions:
  id-token: write
  contents: read

jobs:
  test:
    runs-on: self-hosted

    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
      - uses: actions/checkout@v4

      # Automatically installs Python if missing (via pyenv)
      - name: Ensure Python ${{ matrix.python-version }} is installed
        run: |
          if ! command -v python${{ matrix.python-version }} &>/dev/null; then
            echo "Python ${{ matrix.python-version }} not found, installing via pyenv..."
            if ! command -v pyenv &>/dev/null; then
              curl https://pyenv.run | bash
              export PATH="$HOME/.pyenv/bin:$PATH"
              eval "$(pyenv init -)"
              eval "$(pyenv virtualenv-init -)"
            fi
            pyenv install -s ${{ matrix.python-version }}
            pyenv global ${{ matrix.python-version }}
          fi
          python${{ matrix.python-version }} --version

      - name: Install uv and set the Python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install the project
        run: uv sync --all-extras --dev

  publish:
    runs-on: self-hosted
    needs: test
    environment: pypi

    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v4

      - name: Ensure Python is installed (from pyproject)
        run: |
          PY_VERSION=$(grep -oP '(?<=python = ")[0-9]+\.[0-9]+' pyproject.toml | head -1)
          echo "Detected Python version $PY_VERSION"
          if ! command -v python$PY_VERSION &>/dev/null; then
            echo "Installing Python $PY_VERSION via pyenv..."
            if ! command -v pyenv &>/dev/null; then
              curl https://pyenv.run | bash
              export PATH="$HOME/.pyenv/bin:$PATH"
              eval "$(pyenv init -)"
              eval "$(pyenv virtualenv-init -)"
            fi
            pyenv install -s $PY_VERSION
            pyenv global $PY_VERSION
          fi
          python$PY_VERSION --version

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Build the package
        run: uv build

      - name: Publish to TestPyPI (stage branch)
        if: github.ref == 'refs/heads/stage'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

      - name: Publish to PyPI (master branch)
        if: github.ref == 'refs/heads/master'
        uses: pypa/gh-action-pypi-publish@release/v1
