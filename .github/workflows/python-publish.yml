name: Publish Python Package

on:
  push:
    branches: [master, stage]
  pull_request:
    branches: [master, stage]

permissions:
  id-token: write  # Required for trusted publishing to PyPI
  contents: read   # Required for actions/checkout

jobs:
  test:
    runs-on: self-hosted
    strategy:
      matrix:
        python-version: [3.11]
    steps:
      - uses: actions/checkout@v4

      - name: Run tests inside isolated Docker container
        run: |
          docker run --rm \
          -v "$PWD":/src:ro \
          -w /tmp/workdir \
          -e UV_PROJECT_ENVIRONMENT=/tmp/.venv \
          python:${{ matrix.python-version }} \
          bash -c "
            set -e
            cp -r /src . && cd $(basename /src)
            pip install --upgrade pip uv
            uv sync --all-extras --dev
          "

  publish:
    runs-on: self-hosted
    needs: test
    environment: pypi
    if: github.event_name == 'push' # Only publish on push events, not PRs

    steps:
      - uses: actions/checkout@v4

      # --- FIX ---
      # Removed 'actions/setup-python' and 'astral-sh/setup-uv'.
      # We will now build inside a consistent Docker environment,
      # just like the 'test' job, to avoid host runner issues.

      - name: Build the package inside Docker
        run: |
          # We use python:3.12 to match the test env
          docker run --rm \
          -v "$PWD":/src:ro \
          -v "$PWD/dist":/dist_out \
          -w /tmp/workdir \
          python:3.12 \
          bash -c "
            set -e
            cp -r /src . && cd $(basename /src)
            # Install build tools
            pip install --upgrade pip uv build
            # Install dependencies (if needed for build)
            uv sync --all-extras --dev
            # Build and output to the mounted /dist_out volume
            python -m build --outdir /dist_out
          "

      # The 'pypa/gh-action-pypi-publish' action will now find the
      # artifacts created by Docker in the host's '$PWD/dist' directory.
      
      - name: Publish to TestPyPI (stage branch)
        if: github.ref == 'refs/heads/stage'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/
          
      - name: Publish to PyPI (master branch)
        if: github.ref == 'refs/heads/master'
        uses: pypa/gh-action-pypi-publish@release/v1
        # No 'repository-url' needed, defaults to PyPI

